{"ast":null,"code":"import axios from 'axios';\n\nconst fetchProduct = product_id => {\n  return axios.get(\"http://127.0.0.1:8000/api/product/1\");\n};\n\nexport const wrapPromise = promise => {\n  let status = \"pending\";\n  let result = \"\";\n  let suspender = promise.then(r => {\n    status = \"success\";\n    result = r;\n  }, e => {\n    status = \"error\";\n    result = e;\n  });\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      }\n\n      return result.data;\n    }\n\n  };\n};\nexport const fetchProductData = () => {\n  return {\n    product: wrapPromise(fetchProduct())\n  };\n};","map":{"version":3,"sources":["E:/django_projects/cloth_shop_django_react/frontend/cloth_shop/src/FetchProductApi.js"],"names":["axios","fetchProduct","product_id","get","wrapPromise","promise","status","result","suspender","then","r","e","read","data","fetchProductData","product"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AACjC,SAAOF,KAAK,CAACG,GAAN,CAAU,qCAAV,CAAP;AACH,CAFD;;AAIA,OAAO,MAAMC,WAAW,GAAGC,OAAO,IAAI;AACpC,MAAIC,MAAM,GAAG,SAAb;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,SAAS,GAAGH,OAAO,CAACI,IAAR,CACdC,CAAC,IAAI;AACHJ,IAAAA,MAAM,GAAG,SAAT;AACAC,IAAAA,MAAM,GAAGG,CAAT;AACD,GAJa,EAKdC,CAAC,IAAI;AACHL,IAAAA,MAAM,GAAG,OAAT;AACAC,IAAAA,MAAM,GAAGI,CAAT;AACD,GARa,CAAhB;AAWA,SAAO;AACLC,IAAAA,IAAI,GAAG;AACL,UAAIN,MAAM,KAAK,SAAf,EAA0B;AACxB,cAAME,SAAN;AACD,OAFD,MAEO,IAAIF,MAAM,KAAK,OAAf,EAAwB;AAC7B,cAAMC,MAAN;AACD;;AAED,aAAOA,MAAM,CAACM,IAAd;AACD;;AATI,GAAP;AAWD,CAzBM;AA2BP,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLC,IAAAA,OAAO,EAAEX,WAAW,CAACH,YAAY,EAAb;AADf,GAAP;AAID,CALM","sourcesContent":["import axios from 'axios';\r\n\r\nconst fetchProduct = (product_id) => {\r\n    return axios.get(\"http://127.0.0.1:8000/api/product/1\")\r\n}\r\n\r\nexport const wrapPromise = promise => {\r\n  let status = \"pending\";\r\n  let result = \"\";\r\n  let suspender = promise.then(\r\n    r => {\r\n      status = \"success\";\r\n      result = r;\r\n    },\r\n    e => {\r\n      status = \"error\";\r\n      result = e;\r\n    }\r\n  );\r\n\r\n  return {\r\n    read() {\r\n      if (status === \"pending\") {\r\n        throw suspender;\r\n      } else if (status === \"error\") {\r\n        throw result;\r\n      }\r\n\r\n      return result.data;\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchProductData = () => {\r\n  return {\r\n    product: wrapPromise(fetchProduct())\r\n\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}